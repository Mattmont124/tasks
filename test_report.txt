
> react-typescript-starter@0.1.0 test
> react-scripts test --coverage

Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
PASS src/objects.test.ts
FAIL src/arrays.test.ts
  ● Testing the array functions › Testing the makeMath function

    expect(received).toEqual(expected) // deep equality

    Expected: "0=0"
    Received: "0="

      256 |         expect(makeMath(NUMBERS_2)).toEqual("600=100+300+200");
      257 |         expect(makeMath(NUMBERS_3)).toEqual("5=5");
    > 258 |         expect(makeMath(NUMBERS_4)).toEqual("0=0");
          |                                     ^
      259 |         expect(makeMath(NUMBERS_7)).toEqual("1000=199+1+550+50+200");
      260 |     });
      261 |

      at Object.<anonymous> (src/arrays.test.ts:258:37)

  ● Testing the array functions › Testing the injectPositive function

    expect(received).toEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 1

      Array [
        100,
        199,
        1,
    -   -5,
        300,
    +   -5,
        7,
        3,
      ]

      267 |         expect(injectPositive(NUMBERS_3)).toEqual([5, 5]);
      268 |         expect(injectPositive(NUMBERS_4)).toEqual([0]);
    > 269 |         expect(injectPositive(NUMBERS_5)).toEqual([100, 199, 1, -5, 300, 7, 3]);
          |                                           ^
      270 |         expect(injectPositive(NUMBERS_6)).toEqual([-100, 0, -200, 100, 200]);
      271 |         expect(injectPositive(NUMBERS_7)).toEqual([199, 1, 550, 50, 200, 1000]);
      272 |     });

      at Object.<anonymous> (src/arrays.test.ts:269:43)

PASS src/nested.test.ts
PASS src/components/StartAttempt.test.tsx
PASS src/bad-components/ChooseTeam.test.tsx
FAIL src/components/TwoDice.test.tsx
  ● TwoDice Component tests › Clicking left button changes first number

    expect(jest.fn()).toBeCalledTimes(expected)

    Expected number of calls: 3
    Received number of calls: 11

      52 |         leftButton.click();
      53 |         // Then the random function should be called 3 times
    > 54 |         expect(mathRandomFunction).toBeCalledTimes(3);
         |                                    ^
      55 |         // And the number to be 5
      56 |         const leftNumber = extractDigits(screen.getByTestId("left-die"));
      57 |         expect(leftNumber).toEqual(5);

      at Object.<anonymous> (src/components/TwoDice.test.tsx:54:36)

  ● TwoDice Component tests › Clicking right button changes second number

    expect(jest.fn()).toBeCalledTimes(expected)

    Expected number of calls: 3
    Received number of calls: 11

      64 |         rightButton.click();
      65 |         // Then the random function should be called 3 times
    > 66 |         expect(mathRandomFunction).toBeCalledTimes(3);
         |                                    ^
      67 |         // And the number to be 5
      68 |         const rightNumber = extractDigits(screen.getByTestId("right-die"));
      69 |         expect(rightNumber).toEqual(5);

      at Object.<anonymous> (src/components/TwoDice.test.tsx:66:36)

  ● TwoDice Component tests › Rolling two different numbers does not win or lose the game

    expect(received).toEqual(expected) // deep equality

    Expected: 1
    Received: 5

      82 |         const leftNumber = extractDigits(leftDie);
      83 |         const rightNumber = extractDigits(rightDie);
    > 84 |         expect(leftNumber).toEqual(1);
         |                            ^
      85 |         expect(rightNumber).toEqual(6);
      86 |         // And then the game is not won
      87 |         const winText = screen.queryByText(/Win/i);

      at Object.<anonymous> (src/components/TwoDice.test.tsx:84:28)

  ● TwoDice Component tests › Getting snake eyes loses the game

    expect(received).toEqual(expected) // deep equality

    Expected: 1
    Received: 5

      106 |         const leftNumber = extractDigits(leftDie);
      107 |         const rightNumber = extractDigits(rightDie);
    > 108 |         expect(leftNumber).toEqual(1);
          |                            ^
      109 |         expect(rightNumber).toEqual(1);
      110 |         // And then the game is not won
      111 |         const winText = screen.queryByText(/Win/i);

      at Object.<anonymous> (src/components/TwoDice.test.tsx:108:28)

  ● TwoDice Component tests › Getting matching numbers wins the game

    expect(received).toEqual(expected) // deep equality

    Expected: 5
    Received: 4

      129 |         const leftNumber = extractDigits(leftDie);
      130 |         const rightNumber = extractDigits(rightDie);
    > 131 |         expect(leftNumber).toEqual(5);
          |                            ^
      132 |         expect(rightNumber).toEqual(5);
      133 |         // And then the game is not lost
      134 |         const loseText = screen.queryByText(/Lose/i);

      at Object.<anonymous> (src/components/TwoDice.test.tsx:131:28)

PASS src/functions.test.ts
PASS src/bad-components/DoubleHalf.test.tsx
PASS src/components/ChangeType.test.tsx
PASS src/components/CycleHoliday.test.tsx
PASS src/components/Counter.test.tsx
PASS src/components/RevealAnswer.test.tsx
PASS src/bad-components/ColoredBox.test.tsx
PASS src/bad-components/ShoveBox.test.tsx
PASS src/App.test.tsx
----------------------|---------|----------|---------|---------|----------------------
File                  | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s    
----------------------|---------|----------|---------|---------|----------------------
All files             |   95.98 |     91.4 |     100 |   95.68 |                      
 src                  |   94.85 |    91.74 |     100 |   94.47 |                      
  App.tsx             |     100 |      100 |     100 |     100 |                      
  arrays.ts           |   98.14 |      100 |     100 |      98 | 18                   
  functions.ts        |   81.08 |       88 |     100 |   81.08 | 25-26,30-31,33-34,42 
  nested.ts           |     100 |     92.3 |     100 |     100 | 99,242               
  objects.ts          |   96.42 |     87.5 |     100 |   96.29 | 57                   
 src/bad-components   |   97.05 |       50 |     100 |   96.77 |                      
  ChooseTeam.tsx      |     100 |       50 |     100 |     100 | 18                   
  ColoredBox.tsx      |     100 |      100 |     100 |     100 |                      
  DoubleHalf.tsx      |     100 |      100 |     100 |     100 |                      
  DoubleHalfState.tsx |       0 |      100 |     100 |       0 | 3                    
  ShoveBox.tsx        |     100 |      100 |     100 |     100 |                      
 src/components       |     100 |    94.11 |     100 |     100 |                      
  ChangeType.tsx      |     100 |      100 |     100 |     100 |                      
  Counter.tsx         |     100 |      100 |     100 |     100 |                      
  CycleHoliday.tsx    |     100 |      100 |     100 |     100 |                      
  RevealAnswer.tsx    |     100 |      100 |     100 |     100 |                      
  StartAttempt.tsx    |     100 |      100 |     100 |     100 |                      
  TwoDice.tsx         |     100 |    85.71 |     100 |     100 | 41                   
 src/interfaces       |       0 |        0 |       0 |       0 |                      
  answer.ts           |       0 |        0 |       0 |       0 |                      
  question.ts         |       0 |        0 |       0 |       0 |                      
----------------------|---------|----------|---------|---------|----------------------

Test Suites: 2 failed, 13 passed, 15 total
Tests:       7 failed, 103 passed, 110 total
Snapshots:   0 total
Time:        6.275 s
Ran all test suites.
